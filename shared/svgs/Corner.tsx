"use client";

import { useEffect, useState } from "react";

export default function Corner() {
    const [animate, setAnimate] = useState<boolean>(false);

    useEffect(() => {
        setAnimate(true);
    }, []);

    return (
        <div className="h-full w-full">
            <svg
                xmlns="http://www.w3.org/2000/svg"
                className="prefix__solo2 w-full h-full corner-animate"
                viewBox="0 0 800 800"
                width="1em"
                height="1em"
            >
                <defs>
                    <linearGradient
                        gradientTransform="rotate(270)"
                        x1="50%"
                        y1="0%"
                        x2="50%"
                        y2="100%"
                        id="prefix__a"
                    >
                        <stop
                            stopColor="hsla(206, 0%, 24%, 1.00)"
                            offset="0%"
                        />
                        <stop
                            stopColor="hsla(0, 0%, 70%, 1.00)"
                            offset="100%"
                        />
                    </linearGradient>
                </defs>
                <g
                    strokeWidth={2}
                    stroke="url(#prefix__a)"
                    fill="none"
                    strokeLinecap="round"
                    transform="translate(-5 131.051)"
                >
                    <path
                        className="delay-75 transition-all ease duration-[1200ms]"
                        strokeDasharray={`${animate ? "700 0" : "200 100"}`}
                        d="M10 10c14.583.417 38.75 7.208 70 2s46.667-28.875 80-27 46.667 34.333 80 36c33.333 1.667 46.667-28 80-28s46.667 28 80 28 46.667-29.042 80-28c33.333 1.042 46.667 31.75 80 33s46.667-30.542 80-27c33.333 3.542 46.667 44.417 80 44 33.333-.417 63.333-36.417 80-46"
                    />
                    <path
                        strokeDasharray={`${animate ? "100 0" : `300 70`}`}
                        d="M10 520c14.583.417 38.75 7.208 70 2s46.667-28.875 80-27 46.667 34.333 80 36c33.333 1.667 46.667-28 80-28s46.667 28 80 28 46.667-29.042 80-28c33.333 1.042 46.667 31.75 80 33s46.667-30.542 80-27c33.333 3.542 46.667 44.417 80 44 33.333-.417 63.333-36.417 80-46"
                    />
                    <path
                        strokeDasharray={`${animate ? "100 0" : "100 25"}`}
                        d="M10 469c14.583.417 38.75 7.208 70 2s46.667-28.875 80-27 46.667 34.333 80 36c33.333 1.667 46.667-28 80-28s46.667 28 80 28 46.667-29.042 80-28c33.333 1.042 46.667 31.75 80 33s46.667-30.542 80-27c33.333 3.542 46.667 44.417 80 44 33.333-.417 63.333-36.417 80-46"
                    />
                    <path
                        strokeDasharray={`${animate ? "100 0" : "400 60"}`}
                        d="M10 418c14.583.417 38.75 7.208 70 2s46.667-28.875 80-27 46.667 34.333 80 36c33.333 1.667 46.667-28 80-28s46.667 28 80 28 46.667-29.042 80-28c33.333 1.042 46.667 31.75 80 33s46.667-30.542 80-27c33.333 3.542 46.667 44.417 80 44 33.333-.417 63.333-36.417 80-46"
                    />
                    <path
                        strokeDasharray={`${animate ? "100 0" : "200 15"}`}
                        d="M10 367c14.583.417 38.75 7.208 70 2s46.667-28.875 80-27 46.667 34.333 80 36c33.333 1.667 46.667-28 80-28s46.667 28 80 28 46.667-29.042 80-28c33.333 1.042 46.667 31.75 80 33s46.667-30.542 80-27c33.333 3.542 46.667 44.417 80 44 33.333-.417 63.333-36.417 80-46"
                    />
                    <path
                        className="delay-200 transition-all ease duration-[1200ms]"
                        strokeDasharray={`${animate ? "300 0" : "100 50"}`}
                        d="M10 316c14.583.417 38.75 7.208 70 2s46.667-28.875 80-27 46.667 34.333 80 36c33.333 1.667 46.667-28 80-28s46.667 28 80 28 46.667-29.042 80-28c33.333 1.042 46.667 31.75 80 33s46.667-30.542 80-27c33.333 3.542 46.667 44.417 80 44 33.333-.417 63.333-36.417 80-46M10 265c14.583.417 38.75 7.208 70 2s46.667-28.875 80-27 46.667 34.333 80 36c33.333 1.667 46.667-28 80-28s46.667 28 80 28 46.667-29.042 80-28c33.333 1.042 46.667 31.75 80 33s46.667-30.542 80-27c33.333 3.542 46.667 44.417 80 44 33.333-.417 63.333-36.417 80-46M10 214c14.583.417 38.75 7.208 70 2s46.667-28.875 80-27 46.667 34.333 80 36c33.333 1.667 46.667-28 80-28s46.667 28 80 28 46.667-29.042 80-28c33.333 1.042 46.667 31.75 80 33s46.667-30.542 80-27c33.333 3.542 46.667 44.417 80 44 33.333-.417 63.333-36.417 80-46M10 163c14.583.417 38.75 7.208 70 2s46.667-28.875 80-27 46.667 34.333 80 36c33.333 1.667 46.667-28 80-28s46.667 28 80 28 46.667-29.042 80-28c33.333 1.042 46.667 31.75 80 33s46.667-30.542 80-27c33.333 3.542 46.667 44.417 80 44 33.333-.417 63.333-36.417 80-46M10 112c14.583.417 38.75 7.208 70 2s46.667-28.875 80-27 46.667 34.333 80 36c33.333 1.667 46.667-28 80-28s46.667 28 80 28 46.667-29.042 80-28c33.333 1.042 46.667 31.75 80 33s46.667-30.542 80-27c33.333 3.542 46.667 44.417 80 44 33.333-.417 63.333-36.417 80-46"
                    />
                    <path
                        className="delay-150 transition-all ease duration-[1200ms]"
                        strokeDasharray={`${animate ? "500 0" : "200 70"}`}
                        d="M10 61c14.583.417 38.75 7.208 70 2s46.667-28.875 80-27 46.667 34.333 80 36c33.333 1.667 46.667-28 80-28s46.667 28 80 28 46.667-29.042 80-28c33.333 1.042 46.667 31.75 80 33s46.667-30.542 80-27c33.333 3.542 46.667 44.417 80 44 33.333-.417 63.333-36.417 80-46"
                    />
                </g>
            </svg>
        </div>
    );
}
